{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport QrScannerEngine from 'qr-scanner';\nimport { useEffect, useMemo, useState } from 'react';\nexport function Camera(props) {\n  var onVideo = props.onVideo,\n      constraints = props.constraints,\n      videoProps = __rest(props, [\"onVideo\", \"constraints\"]);\n\n  var _a = useState(null),\n      video = _a[0],\n      setVideo = _a[1];\n\n  var streamPromise = useMemo(function () {\n    return navigator.mediaDevices.getUserMedia(constraints || {\n      video: {\n        facingMode: 'environment'\n      },\n      audio: false\n    });\n  }, [constraints]);\n  useMemo(function () {\n    streamPromise.catch(function (err) {\n      return console.error('failed to get user media:', err);\n    });\n  }, [streamPromise]);\n  useEffect(function () {\n    streamPromise.then(function (stream) {\n      if (!video) {\n        return;\n      }\n\n      video.srcObject = stream;\n\n      video.onloadedmetadata = function () {\n        video.play();\n        onVideo(video);\n      };\n    });\n    return function () {};\n  }, [video, streamPromise, onVideo]);\n  useEffect(function () {\n    return function () {\n      streamPromise.then(function (stream) {\n        stream.getVideoTracks().forEach(function (track) {\n          return stream.removeTrack(track);\n        });\n      });\n    };\n  }, [streamPromise]);\n  return _jsx(\"video\", __assign({}, videoProps, {\n    ref: setVideo\n  }), void 0);\n}\nexport function VideoQrScanner(props) {\n  var video = props.video,\n      onQrCode = props.onQrCode;\n  useEffect(function () {\n    var qrScanner = new QrScannerEngine(video, onQrCode);\n    qrScanner.start();\n    return function () {\n      qrScanner.stop();\n    };\n  }, [video, onQrCode]);\n  return _jsx(_Fragment, {}, void 0);\n}\nexport function ContinuousQrScanner(props) {\n  var onQrCode = props.onQrCode,\n      videoProps = __rest(props, [\"onQrCode\"]);\n\n  var _a = useState(null),\n      video = _a[0],\n      setVideo = _a[1];\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(Camera, __assign({\n      onVideo: setVideo\n    }, videoProps), void 0), video && _jsx(VideoQrScanner, {\n      video: video,\n      onQrCode: onQrCode\n    }, void 0)]\n  }, void 0);\n}\nexport function OneOffQrScanner(props) {\n  var onQrCode = props.onQrCode,\n      videoProps = __rest(props, [\"onQrCode\"]);\n\n  var _a = useState(false),\n      hasShown = _a[0],\n      setHasShown = _a[1];\n\n  function oneOffOnQrCode(qrCode) {\n    onQrCode(qrCode);\n    setHasShown(true);\n  }\n\n  if (hasShown) {\n    return _jsx(_Fragment, {}, void 0);\n  }\n\n  return _jsx(ContinuousQrScanner, __assign({\n    onQrCode: oneOffOnQrCode\n  }, videoProps), void 0);\n}\nexport default OneOffQrScanner;","map":{"version":3,"mappings":"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","names":["QrScannerEngine","useEffect","useMemo","useState","Camera","props","constraints","videoProps","video","setVideo","streamPromise","mediaDevices","getUserMedia","facingMode","audio","catch","err","error","then","stream","srcObject","onloadedmetadata","play","onVideo","getVideoTracks","forEach","track","removeTrack","_jsx","ref","VideoQrScanner","onQrCode","qrScanner","start","stop","ContinuousQrScanner","_jsxs","children","__assign","OneOffQrScanner","hasShown","setHasShown","oneOffOnQrCode","qrCode"],"sources":["/home/vpaligorov/Desktop/PharmacyVendingMachineUI/pvm_ui/node_modules/react-webcam-qr-scanner.ts/src/webcam-qr-scanner.tsx"],"sourcesContent":["import QrScannerEngine from 'qr-scanner'\nimport React, { HTMLProps, useEffect, useMemo, useState } from 'react'\n\nexport type CameraProps = HTMLProps<HTMLVideoElement> & {\n  onVideo: (video: HTMLVideoElement) => void\n  constraints?: MediaStreamConstraints\n}\n\nexport function Camera(props: CameraProps) {\n  const { onVideo, constraints, ...videoProps } = props\n  const [video, setVideo] = useState<HTMLVideoElement | null>(null)\n\n  const streamPromise = useMemo(\n    () =>\n      navigator.mediaDevices.getUserMedia(\n        constraints || { video: { facingMode: 'environment' }, audio: false },\n      ),\n    [constraints],\n  )\n  useMemo(() => {\n    streamPromise.catch((err) =>\n      console.error('failed to get user media:', err),\n    )\n  }, [streamPromise])\n\n  useEffect(() => {\n    streamPromise.then((stream) => {\n      if (!video) {\n        return\n      }\n      video.srcObject = stream\n      video.onloadedmetadata = () => {\n        video.play()\n        onVideo(video)\n      }\n    })\n    return () => {}\n  }, [video, streamPromise, onVideo])\n\n  useEffect(() => {\n    return () => {\n      streamPromise.then((stream) => {\n        stream.getVideoTracks().forEach((track) => stream.removeTrack(track))\n      })\n    }\n  }, [streamPromise])\n\n  return <video {...videoProps} ref={setVideo}></video>\n}\n\nexport type VideoQrScannerProps = {\n  onQrCode: (qrCode: string) => void\n  video: HTMLVideoElement\n}\n\nexport function VideoQrScanner(props: VideoQrScannerProps) {\n  const { video, onQrCode } = props\n\n  useEffect(() => {\n    const qrScanner = new QrScannerEngine(video, onQrCode)\n    qrScanner.start()\n    return () => {\n      qrScanner.stop()\n    }\n  }, [video, onQrCode])\n\n  return <></>\n}\n\nexport type QrScannerProps = Omit<CameraProps, 'onVideo'> &\n  Pick<VideoQrScannerProps, 'onQrCode'>\n\nexport function ContinuousQrScanner(props: QrScannerProps) {\n  const { onQrCode, ...videoProps } = props\n  const [video, setVideo] = useState<HTMLVideoElement | null>(null)\n  return (\n    <>\n      <Camera onVideo={setVideo} {...videoProps} />\n      {video && <VideoQrScanner video={video} onQrCode={onQrCode} />}\n    </>\n  )\n}\n\nexport function OneOffQrScanner(props: QrScannerProps) {\n  const { onQrCode, ...videoProps } = props\n  const [hasShown, setHasShown] = useState(false)\n  function oneOffOnQrCode(qrCode: string) {\n    onQrCode(qrCode)\n    setHasShown(true)\n  }\n  if (hasShown) {\n    return <></>\n  }\n  return <ContinuousQrScanner onQrCode={oneOffOnQrCode} {...videoProps} />\n}\n\nexport default OneOffQrScanner\n"]},"metadata":{},"sourceType":"module"}