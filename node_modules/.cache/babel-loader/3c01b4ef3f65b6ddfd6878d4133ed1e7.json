{"ast":null,"code":"var _jsxFileName = \"/home/vpaligorov/Desktop/PharmacyVendingMachineUI/pvm_ui/src/elements/Desktop/Admin/medicines/showMedicines.js\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport '../../../../css/showMedicines.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShowMedicines extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      ip: 'http://localhost:8081/medicines'\n    };\n  }\n\n  componentDidMount() {\n    const url = new URL(window.location.href);\n    if (url.pathname === '/showMachineMedicines') this.setState({\n      ip: sessionStorage.getItem('machineIP') + '/medicines?prescription=both'\n    });\n    let headers = new Headers();\n    headers.set('Authorization', 'Basic ' + btoa(localStorage.getItem(\"email\") + \":\" + localStorage.getItem(\"password\")));\n    headers.set('Content-Type', 'application/json');\n    fetch(this.ip, {\n      headers: headers\n    }).then(response => response.json()).then(data => {\n      if (data.length !== 0) this.setState({\n        data: data\n      });\n    });\n  }\n\n  setDelete(name) {\n    let headers = new Headers();\n    headers.set('Authorization', 'Basic ' + btoa(localStorage.getItem('email') + \":\" + localStorage.getItem('password')));\n    headers.set('Content-Type', 'application/json');\n    fetch(this.ip, {\n      method: \"DELETE\",\n      headers: headers,\n      body: JSON.stringify(name)\n    }).then(r => {\n      if (r.status === 200) {\n        toast.success(\"Medicine deleted!\");\n        this.setState({});\n      } else toast.error(\"Something unexpected happened! Try again!\");\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      id: \"showMedicines\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Medicines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), this.state.data ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"needs prescription\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.data.map((medicine, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: medicine.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: medicine.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: medicine.needsPrescription ? \"needs prescription\" : \"doesn't need prescription\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"rmvBtn\",\n                  onClick: () => this.setDelete([medicine.name]),\n                  children: \"Delete Medicine\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There is no medicines yet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ShowMedicines;","map":{"version":3,"sources":["/home/vpaligorov/Desktop/PharmacyVendingMachineUI/pvm_ui/src/elements/Desktop/Admin/medicines/showMedicines.js"],"names":["React","toast","ShowMedicines","Component","constructor","props","state","data","ip","componentDidMount","url","URL","window","location","href","pathname","setState","sessionStorage","getItem","headers","Headers","set","btoa","localStorage","fetch","then","response","json","length","setDelete","name","method","body","JSON","stringify","r","status","success","error","render","map","medicine","index","price","needsPrescription"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport '../../../../css/showMedicines.css'\nclass ShowMedicines extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            ip: 'http://localhost:8081/medicines'\n        };\n    }\n\n    componentDidMount() {\n        const url = new URL(window.location.href);\n        if (url.pathname === '/showMachineMedicines')\n            this.setState({ip: sessionStorage.getItem('machineIP')+'/medicines?prescription=both'})\n            \n        let headers = new Headers();\n        headers.set('Authorization', 'Basic ' + btoa(localStorage.getItem(\"email\") + \":\" + localStorage.getItem(\"password\")));\n        headers.set('Content-Type', 'application/json');\n        fetch(this.ip, {\n            headers: headers\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.length !== 0)\n                    this.setState({ data: data });\n            });\n\n    }\n\n    setDelete(name) {\n        \n        let headers = new Headers();\n        headers.set('Authorization', 'Basic ' + btoa(localStorage.getItem('email') + \":\" + localStorage.getItem('password')));\n        headers.set('Content-Type', 'application/json');\n        fetch(this.ip, {\n            method: \"DELETE\",\n            headers: headers,\n            body: JSON.stringify(name)\n\n        }).then(r => {\n            if (r.status === 200) {\n                toast.success(\"Medicine deleted!\");\n                this.setState({});\n            } else\n                toast.error(\"Something unexpected happened! Try again!\");\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"content\" id=\"showMedicines\">\n                <h1>Medicines</h1>\n                <hr />\n                {\n                    this.state.data ?\n                        <div>\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>name</th>\n                                        <th>price</th>\n                                        <th>needs prescription</th>\n                                        <th>delete</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.state.data.map((medicine, index) =>\n                                        <tr>\n                                            <td>{medicine.name}</td>\n                                            <td>{medicine.price}</td>\n                                            <td>{medicine.needsPrescription ? \"needs prescription\" : \"doesn't need prescription\"}</td>\n                                            <td>\n                                                <button className=\"rmvBtn\"\n                                                    onClick={() => this.setDelete([medicine.name])}>Delete\n                                                    Medicine\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n\n                        </div>\n                        : <p>There is no medicines yet!</p>\n                }\n            </div>)\n    }\n}\n\nexport default ShowMedicines;"]},"metadata":{},"sourceType":"module"}