{"ast":null,"code":"var _jsxFileName = \"/home/vpaligorov/Desktop/PharmacyVendingMachineUI/pvm_ui/src/elements/Mobile/connectToMachine/connectToMachine.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { OneOffQrScanner } from 'react-webcam-qr-scanner.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DemoOneOffScanning() {\n  _s();\n\n  const [qrCode, setQrCode] = useState('');\n\n  function QrDetected(QrCode) {\n    // const machineIP = atob(QrCode);\n    let message = '';\n    let headers = new Headers();\n    headers.set('Authorization', 'Basic ' + btoa(sessionStorage.getItem(\"email\") + \":\" + sessionStorage.getItem(\"password\")));\n    headers.set('Content-Type', 'application/json');\n    fetch(qrCode + \":8081/prescriptions\", {\n      headers: headers\n    }).then(response => response.json()).then(data => {\n      if (data.status === true) console.log(1);else message = \"Invalid QR code\";\n    }).catch(error => {\n      message = \"Invalid QR code\";\n    });\n    return message;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Scan Machine QR Code: \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: QrDetected(qrCode)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OneOffQrScanner, {\n      onQrCode: setQrCode,\n      hidden: false\n      /* optional: set true to hide the video-preview */\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DemoOneOffScanning, \"mllj/JYPdze9TmrenfQyB5E/uek=\");\n\n_c = DemoOneOffScanning;\nexport default DemoOneOffScanning;\n\nvar _c;\n\n$RefreshReg$(_c, \"DemoOneOffScanning\");","map":{"version":3,"sources":["/home/vpaligorov/Desktop/PharmacyVendingMachineUI/pvm_ui/src/elements/Mobile/connectToMachine/connectToMachine.js"],"names":["React","useState","OneOffQrScanner","DemoOneOffScanning","qrCode","setQrCode","QrDetected","QrCode","message","headers","Headers","set","btoa","sessionStorage","getItem","fetch","then","response","json","data","status","console","log","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,4BAAhC;;;AAEA,SAASC,kBAAT,GAA8B;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASK,UAAT,CAAoBC,MAApB,EAA4B;AAC1B;AACA,QAAIC,OAAO,GAAE,EAAb;AAEA,QAAIC,OAAO,GAAG,IAAIC,OAAJ,EAAd;AACAD,IAAAA,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6B,WAAWC,IAAI,CAACC,cAAc,CAACC,OAAf,CAAuB,OAAvB,IAAkC,GAAlC,GAAwCD,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAzC,CAA5C;AACAL,IAAAA,OAAO,CAACE,GAAR,CAAY,cAAZ,EAA4B,kBAA5B;AACAI,IAAAA,KAAK,CAACX,MAAM,GAAG,qBAAV,EAAiC;AACpCK,MAAAA,OAAO,EAAEA;AAD2B,KAAjC,CAAL,CAGGO,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAIGF,IAJH,CAIQG,IAAI,IAAI;AACZ,UAAGA,IAAI,CAACC,MAAL,KAAgB,IAAnB,EACEC,OAAO,CAACC,GAAR,CAAY,CAAZ,EADF,KAGEd,OAAO,GAAG,iBAAV;AACH,KATH,EAUGe,KAVH,CAWIC,KAAK,IAAG;AACJhB,MAAAA,OAAO,GAAG,iBAAV;AACH,KAbL;AAeE,WAAOA,OAAP;AACH;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAA,wDACwB;AAAA,kBAAOF,UAAU,CAACF,MAAD;AAAjB;AAAA;AAAA;AAAA;AAAA,cADxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,eAAD;AACE,MAAA,QAAQ,EAAEC,SADZ;AAEE,MAAA,MAAM,EAAE;AAAO;;AAFjB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAzCQF,kB;;KAAAA,kB;AA2CT,eAAeA,kBAAf","sourcesContent":["import React, { useState } from 'react'\nimport { OneOffQrScanner } from 'react-webcam-qr-scanner.ts'\n\nfunction DemoOneOffScanning() {\n  const [qrCode, setQrCode] = useState('')\n\n  function QrDetected(QrCode) {\n    // const machineIP = atob(QrCode);\n    let message =''\n\n    let headers = new Headers();\n    headers.set('Authorization', 'Basic ' + btoa(sessionStorage.getItem(\"email\") + \":\" + sessionStorage.getItem(\"password\")));\n    headers.set('Content-Type', 'application/json');\n    fetch(qrCode + \":8081/prescriptions\", {\n      headers: headers\n    })\n      .then(response => response.json())\n      .then(data => {\n        if(data.status === true)\n          console.log(1)\n        else\n          message = \"Invalid QR code\"\n      })\n      .catch(\n        error =>{\n            message = \"Invalid QR code\"\n        }\n      );\n      return(message);\n  }\n\n  return (\n    <div className='content'>\n      <h1>\n        Scan Machine QR Code: <code>{QrDetected(qrCode)}</code>\n      </h1>\n      {/* auto close the webcam once detected QR code */}\n      <OneOffQrScanner\n        onQrCode={setQrCode}\n        hidden={false} /* optional: set true to hide the video-preview */\n      />\n      {/* {QrDetected(qrCode)}   */}\n    </div>\n  )\n}\n\nexport default DemoOneOffScanning"]},"metadata":{},"sourceType":"module"}