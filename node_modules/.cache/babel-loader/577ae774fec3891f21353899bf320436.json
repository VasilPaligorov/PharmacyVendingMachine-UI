{"ast":null,"code":"var _jsxFileName = \"/home/vpaligorov/Desktop/PharmacyVendingMachineUI/pvm_ui/src/elements/SharedElements/prescriptions/showPrescriptions.js\";\nimport React from \"react\";\nimport '../../../css/showPrescriptions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ShowPrescriptions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      platform: navigator.platform,\n      validData: \"\",\n      invalidData: \"\",\n      admin: false,\n      doctor: true,\n      patient: false,\n      data: \"\"\n    };\n  }\n\n  componentDidMount() {\n    let user = 'doctor';\n\n    if (this.state.platform === \"Android\") {\n      user = 'patient';\n      this.setState({\n        patient: true\n      });\n      this.setState({\n        doctor: false\n      });\n    }\n\n    if (sessionStorage.getItem(\"email\") === \"admin@gmail.com\") {\n      this.setState({\n        admin: true\n      });\n      this.setState({\n        doctor: false\n      });\n      user = 'all';\n    }\n\n    let headers = new Headers();\n    headers.set('Authorization', 'Basic ' + btoa(sessionStorage.getItem(\"email\") + \":\" + sessionStorage.getItem(\"password\")));\n    headers.set('Content-Type', 'application/json');\n    fetch(\"http://localhost:8081/prescriptions/\" + user, {\n      headers: headers\n    }).then(response => response.json()).then(data => {\n      let ValidData = [];\n      let InvalidData = [];\n      data.forEach(element => {\n        if (element.valid) ValidData.push(element);else InvalidData.push(element);\n      });\n      if (ValidData.length !== 0) this.setState({\n        validData: ValidData\n      });\n      if (InvalidData.length !== 0) this.setState({\n        invalidData: InvalidData\n      });\n    });\n  }\n\n  setOnClick(event) {\n    if (event.target.nextSibling.style.display === 'none') event.target.nextSibling.style.display = 'block';else event.target.nextSibling.style.display = 'none';\n  }\n\n  setDelete(id) {\n    let headers = new Headers();\n    headers.set('Authorization', 'Basic ' + btoa(sessionStorage.getItem('email') + \":\" + sessionStorage.getItem('password')));\n    headers.set('Content-Type', 'application/json');\n    fetch(\"http://localhost:8081/prescriptions\", {\n      method: \"DELETE\",\n      headers: headers,\n      body: JSON.stringify(id)\n    }).then(r => {\n      if (r.status === 200) {\n        window.alert(\"Prescription deleted!\");\n        window.location.reload();\n      } else window.alert(\"Something unexpected happened! Try again!\");\n    });\n  }\n\n  setChangeValid(id, valid) {\n    let headers = new Headers();\n    headers.set('Authorization', 'Basic ' + btoa(sessionStorage.getItem('email') + \":\" + sessionStorage.getItem('password')));\n    headers.set('Content-Type', 'application/json');\n    fetch(\"http://localhost:8081/prescriptions?valid=\" + valid, {\n      method: \"PUT\",\n      headers: headers,\n      body: JSON.stringify(id)\n    }).then(r => {\n      if (r.status === 200) {\n        window.alert(\"Done! Prescription 'valid' state changed!\");\n        window.location.reload();\n      } else window.alert(\"Something unexpected happened! Try again!\");\n    });\n  }\n\n  setFulfillPrescription(id) {\n    sessionStorage.setItem({\n      \"prescriptionId\": id\n    });\n    window.location.href = \"/connectToMachie\";\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      id: \"showPresriptions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Prescriptions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"valid\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Valid Prescriptions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), this.state.validData ? this.state.validData.map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: event => this.setOnClick(event),\n            children: \"Prescription \" + element.id + \" to: \" + element.patient\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'none'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"table\", {\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: element.medicines.map(medicine => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: medicine.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: medicine.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [medicine.quantity, \" * \", medicine.price, \" = \", medicine.quantity * medicine.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 37\n            }, this), this.state.doctor ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn2\",\n                onClick: () => this.setChangeValid([element.id], false),\n                children: \"Make Prescription Invalid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 45\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), this.state.admin ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn2\",\n              onClick: () => this.setDelete([element.id]),\n              children: \"Delete Prescription\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), this.state.patient ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn2\",\n              onClick: () => this.setFulfillPrescription(element.id),\n              children: \"Fulfill Prescription\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You dont have valid prescriptions yet!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"inValid\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"InValid Prescriptions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, this), this.state.invalidData ? this.state.invalidData.map(element => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: event => this.setOnClick(event),\n            children: \"Prescription \" + element.id + \" to: \" + element[\"patient\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'none'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"table\", {\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: element.medicines.map(medicine => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: medicine.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: medicine.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [medicine.quantity, \" * \", medicine.price, \" = \", medicine.quantity * medicine.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 37\n            }, this), this.state.doctor ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn2\",\n                onClick: () => this.setChangeValid([element.id], true),\n                children: \"Make Prescription Invalid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 45\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), this.state.admin ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn2\",\n              onClick: () => this.setDelete([element.id]),\n              children: \"Delete Prescription\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You dont have invalid prescriptions yet!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default ShowPrescriptions;","map":{"version":3,"sources":["/home/vpaligorov/Desktop/PharmacyVendingMachineUI/pvm_ui/src/elements/SharedElements/prescriptions/showPrescriptions.js"],"names":["React","ShowPrescriptions","Component","constructor","props","state","platform","navigator","validData","invalidData","admin","doctor","patient","data","componentDidMount","user","setState","sessionStorage","getItem","headers","Headers","set","btoa","fetch","then","response","json","ValidData","InvalidData","forEach","element","valid","push","length","setOnClick","event","target","nextSibling","style","display","setDelete","id","method","body","JSON","stringify","r","status","window","alert","location","reload","setChangeValid","setFulfillPrescription","setItem","href","render","map","medicines","medicine","name","quantity","price"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport '../../../css/showPrescriptions.css'\n\nclass ShowPrescriptions extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            platform: navigator.platform,\n            validData: \"\",\n            invalidData: \"\",\n            admin: false,\n            doctor: true,\n            patient: false,\n            data: \"\"\n        };\n    }\n\n    componentDidMount() {\n        let user = 'doctor';\n        if (this.state.platform === \"Android\") {\n            user = 'patient';\n            this.setState({ patient: true });\n            this.setState({ doctor: false });\n        }\n        if (sessionStorage.getItem(\"email\") === \"admin@gmail.com\") {\n            this.setState({ admin: true })\n            this.setState({ doctor: false });\n            user = 'all';\n        }\n        let headers = new Headers();\n        headers.set('Authorization', 'Basic ' + btoa(sessionStorage.getItem(\"email\") + \":\" + sessionStorage.getItem(\"password\")));\n        headers.set('Content-Type', 'application/json');\n        fetch(\"http://localhost:8081/prescriptions/\" + user, {\n            headers: headers\n        })\n            .then(response => response.json())\n            .then(data => {\n                let ValidData = [];\n                let InvalidData = [];\n                data.forEach(element => {\n                    if (element.valid)\n                        ValidData.push(element)\n                    else\n                        InvalidData.push(element)\n                })\n                if (ValidData.length !== 0)\n                    this.setState({ validData: ValidData });\n                if (InvalidData.length !== 0)\n                    this.setState({ invalidData: InvalidData });\n            });\n    }\n\n    setOnClick(event) {\n        if (event.target.nextSibling.style.display === 'none')\n            event.target.nextSibling.style.display = 'block';\n        else\n            event.target.nextSibling.style.display = 'none';\n    }\n\n    setDelete(id) {\n        let headers = new Headers();\n        headers.set('Authorization', 'Basic ' + btoa(sessionStorage.getItem('email') + \":\" + sessionStorage.getItem('password')));\n        headers.set('Content-Type', 'application/json');\n        fetch(\"http://localhost:8081/prescriptions\", {\n            method: \"DELETE\",\n            headers: headers,\n            body: JSON.stringify(id)\n\n        }).then(r => {\n            if (r.status === 200) {\n                window.alert(\"Prescription deleted!\");\n                window.location.reload()\n            } else\n                window.alert(\"Something unexpected happened! Try again!\");\n        })\n    }\n\n    setChangeValid(id, valid) {\n        let headers = new Headers();\n        headers.set('Authorization', 'Basic ' + btoa(sessionStorage.getItem('email') + \":\" + sessionStorage.getItem('password')));\n        headers.set('Content-Type', 'application/json');\n        fetch(\"http://localhost:8081/prescriptions?valid=\" + valid, {\n            method: \"PUT\",\n            headers: headers,\n            body: JSON.stringify(id)\n\n        }).then(r => {\n            if (r.status === 200) {\n                window.alert(\"Done! Prescription 'valid' state changed!\");\n                window.location.reload()\n            } else\n                window.alert(\"Something unexpected happened! Try again!\");\n        })\n    }\n\n    setFulfillPrescription(id){\n        sessionStorage.setItem({\"prescriptionId\": id});\n        window.location.href = (\"/connectToMachie\");\n    }\n\n    render() {\n        return (<div className=\"content\" id=\"showPresriptions\">\n            <h1>Prescriptions:</h1>\n            <hr></hr>\n            <div id=\"valid\">\n                <h2>Valid Prescriptions:</h2>\n                {\n                    this.state.validData ?\n                        this.state.validData.map(element =>\n                            <div>\n                                <button className=\"btn\"\n                                    onClick={(event) => this.setOnClick(event)}>{\"Prescription \" + element.id + \" to: \" + element.patient}</button>\n                                <div style={{ display: 'none' }}>\n                                    <table>\n                                        <thead>\n                                            <tr>\n                                                <th>name</th>\n                                                <th>amount</th>\n                                                <th>price</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {element.medicines.map(medicine =>\n                                                <tr>\n                                                    <td>{medicine.name}</td>\n                                                    <td>{medicine.quantity}</td>\n                                                    <td>{medicine.quantity} * {medicine.price} = {(medicine.quantity) * medicine.price}</td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                    {this.state.doctor ?\n                                        <>\n                                            <button className=\"btn2\"\n                                                onClick={() => this.setChangeValid([element.id], false)}>Make\n                                                Prescription Invalid\n                                            </button>\n                                        </  >\n                                        : <></>}\n                                    {this.state.admin ?\n                                        <button className=\"btn2\" onClick={() => this.setDelete([element.id])}>Delete\n                                            Prescription\n                                        </button>\n                                        : <></>\n                                    }\n                                    {this.state.patient ?\n                                        <button className=\"btn2\" onClick={() => this.setFulfillPrescription(element.id)}>Fulfill\n                                            Prescription\n                                        </button>\n                                        : <></>\n                                    }\n                                </div>\n                            </div>\n                        )\n                        : <p>You dont have valid prescriptions yet!</p>\n                }\n            </div>\n            <div id=\"inValid\">\n                <h2>InValid Prescriptions:</h2>\n                {\n                    this.state.invalidData ?\n                        this.state.invalidData.map(element =>\n                            <>\n                                <button className=\"btn\"\n                                    onClick={(event) => this.setOnClick(event)}>{\"Prescription \" + element.id + \" to: \" + element[\"patient\"]}</button>\n                                <div style={{ display: 'none' }}>\n                                    <table>\n                                        <thead>\n                                            <tr>\n                                                <th>name</th>\n                                                <th>amount</th>\n                                                <th>price</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {element.medicines.map(medicine =>\n                                                <tr>\n                                                    <td>{medicine.name}</td>\n                                                    <td>{medicine.quantity}</td>\n                                                    <td>{medicine.quantity} * {medicine.price} = {(medicine.quantity) * medicine.price}</td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                    {this.state.doctor ?\n                                        <>\n                                            <button className=\"btn2\"\n                                                onClick={() => this.setChangeValid([element.id], true)}>Make\n                                                Prescription Invalid\n                                            </button>\n                                        </  >\n                                        : <></>}\n                                    {this.state.admin ?\n                                        <button className=\"btn2\" onClick={() => this.setDelete([element.id])}>Delete\n                                            Prescription\n                                        </button>\n                                        : <></>\n                                    }\n                                </div>\n                            </>\n                        )\n                        : <p>You dont have invalid prescriptions yet!</p>\n                }\n            </div>\n        </div>)\n    }\n}\n\nexport default ShowPrescriptions;"]},"metadata":{},"sourceType":"module"}