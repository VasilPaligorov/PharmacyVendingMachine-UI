{"ast":null,"code":"var _jsxFileName = \"/home/vpaligorov/Desktop/PharmacyVendingMachineUI/pvm_ui/src/elements/SharedElements/login&register/register.js\";\nimport React from \"react\";\nimport \"./../../../css/register.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getFullName = event => {\n      this.setState({\n        fullName: event.target.value\n      });\n    };\n\n    this.getEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.getWorkplace = event => {\n      this.setState({\n        workplace: event.target.value\n      });\n    };\n\n    this.getUIN = event => {\n      this.setState({\n        uin: event.target.value\n      });\n    };\n\n    this.getPassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.getConfirmPassword = event => {\n      this.setState({\n        confirmPassword: event.target.value\n      });\n    };\n\n    this.platform = navigator.userAgentData.platform;\n    this.state = {\n      fullName: \"\",\n      email: \"\",\n      uin: \"\",\n      workplace: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n    this.getFullName = this.getFullName.bind(this);\n    this.getEmail = this.getEmail.bind(this);\n    this.getWorkplace = this.getWorkplace.bind(this);\n    this.getUIN = this.getUIN.bind(this);\n    this.getPassword = this.getPassword.bind(this);\n    this.getConfirmPassword = this.getConfirmPassword.bind(this);\n  }\n\n  componentDidMount() {\n    this.form = document.querySelector('#create-account-form');\n    this.fullNameInput = document.querySelector('#username');\n    this.emailInput = document.querySelector('#email');\n    this.uinInput = document.querySelector('#uin');\n    this.workplaceInput = document.querySelector('#workplace');\n    this.passwordInput = document.querySelector('#password');\n    this.confirmPasswordInput = document.querySelector('#confirm-password');\n  }\n\n  register() {\n    this.validateForm();\n\n    if (this.isFormValid() === true) {\n      let user = 'doctor';\n      if (this.platform === \"Android\") user = 'patient';\n      const data = {\n        fullName: this.state.fullName,\n        role: user.toUpperCase(),\n        uin: parseInt(this.state.uin),\n        email: this.state.email,\n        workplace: this.state.workplace,\n        password: this.state.password\n      };\n      fetch(\"http://localhost:8081/users/\" + user, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(r => {\n        if (r.status === 200) {\n          toast.sucess();\n          window.location.href = \"/login\";\n        } else if (r.status === 302) {\n          this.setError(this.emailInput, \"This email is already taken.\");\n        } else {\n          this.setError(this.uinInput, \"Your UIN is incorrect.\");\n        }\n      });\n    }\n  }\n\n  isFormValid() {\n    const inputContainers = this.form.querySelectorAll('.input-group');\n    let result = true;\n    inputContainers.forEach(container => {\n      if (container.classList.contains('error')) {\n        result = false;\n      }\n    });\n    return result;\n  }\n\n  validateForm() {\n    //USERNAME\n    if (this.state.fullName.trim() === '') {\n      this.setError(this.fullNameInput, 'Name can not be empty');\n    } else if (this.state.fullName.trim().length < 6) {\n      this.setError(this.fullNameInput, 'Name must be at least 6 characters');\n    } else {\n      this.setSuccess(this.fullNameInput);\n    } //EMAIL\n\n\n    if (this.state.email.trim() === '') {\n      this.setError(this.emailInput, 'Provide email address');\n    } else if (this.state.email.trim() === 'admin@gmail.com') this.setError(this.emailInput, 'This email is already taken!');else if (this.isEmailValid(this.state.email.trim())) {\n      this.setSuccess(this.emailInput);\n    } else {\n      this.setError(this.emailInput, 'Provide valid email address');\n    }\n\n    if (this.platform !== \"Android\") {\n      //UIN\n      if (this.state.uin.trim() === '') {\n        this.setError(this.uinInput, 'UIN can not be empty');\n      } else if (this.state.uin.trim().length < 10 || this.state.uin.trim().length > 10) {\n        this.setError(this.uinInput, 'UIN must be 10-digit number');\n      } else {\n        this.setSuccess(this.uinInput);\n      } //WORKPLACE\n\n\n      if (this.state.workplace.trim() === '') {\n        this.setError(this.workplaceInput, 'Workspace can not be empty');\n      } else if (this.state.workplace.trim().length < 6) {\n        this.setError(this.workplaceInput, 'Workspace must be at least 6 characters');\n      } else {\n        this.setSuccess(this.workplaceInput);\n      }\n    } //PASSWORD\n\n\n    if (this.state.password.trim() === '') {\n      this.setError(this.passwordInput, 'Password can not be empty');\n    } else if (this.state.password.trim().length < 6 || this.state.password.trim().length > 16) {\n      this.setError(this.passwordInput, 'Password must be 6-16 characters');\n    } else {\n      this.setSuccess(this.passwordInput);\n    } //CONFIRM PASSWORD\n\n\n    if (this.state.confirmPassword.trim() === '') {\n      this.setError(this.confirmPasswordInput, 'Password can not be empty');\n    } else if (this.state.confirmPassword !== this.state.password) {\n      this.setError(this.confirmPasswordInput, 'Password does not match');\n    } else {\n      this.setSuccess(this.confirmPasswordInput);\n    }\n  }\n\n  setError(element, errorMessage) {\n    const parent = element.parentElement;\n\n    if (parent.classList.contains('success')) {\n      parent.classList.remove('success');\n    }\n\n    parent.classList.add('error');\n    const paragraph = parent.querySelector('p');\n    paragraph.textContent = errorMessage;\n  }\n\n  setSuccess(element) {\n    const parent = element.parentElement;\n\n    if (parent.classList.contains('error')) {\n      parent.classList.remove('error');\n    }\n\n    parent.classList.add('success');\n  }\n\n  isEmailValid(email) {\n    const re = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\n    return re.test(email);\n  }\n\n  isWeb() {\n    if (this.platform === \"Linux\") return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"uin\",\n          children: \"UIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: this.state.uin,\n          onChange: event => {\n            this.getUIN(event);\n          },\n          id: \"uin\",\n          placeholder: \"UIN:\",\n          name: \"uin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Error Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"workplace\",\n          children: \"Workplace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.workplace,\n          onChange: event => {\n            this.getWorkplace(event);\n          },\n          id: \"workplace\",\n          placeholder: \"Workplace:\",\n          name: \"workplace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Error Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);else return null;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"register\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"create-account-form\",\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.fullName,\n            onChange: event => {\n              this.getFullName(event);\n            },\n            id: \"username\",\n            placeholder: \"Full name:\",\n            name: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Error Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: this.state.email,\n            onChange: event => {\n              this.getEmail(event);\n            },\n            id: \"email\",\n            placeholder: \"Email:\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Error Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), this.isWeb(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: this.state.password,\n            onChange: event => {\n              this.getPassword(event);\n            },\n            id: \"password\",\n            placeholder: \"Password:\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Error Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirm-password\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: this.state.confirmPassword,\n            onChange: event => {\n              this.getConfirmPassword(event);\n            },\n            id: \"confirm-password\",\n            placeholder: \"Password:\",\n            name: \"confirmpassword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Error Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn\",\n          onClick: () => this.register(),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p\",\n          children: [\"Already registered? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/login\",\n            children: \"Sign In!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 58\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/vpaligorov/Desktop/PharmacyVendingMachineUI/pvm_ui/src/elements/SharedElements/login&register/register.js"],"names":["React","Register","Component","constructor","props","getFullName","event","setState","fullName","target","value","getEmail","email","getWorkplace","workplace","getUIN","uin","getPassword","password","getConfirmPassword","confirmPassword","platform","navigator","userAgentData","state","bind","componentDidMount","form","document","querySelector","fullNameInput","emailInput","uinInput","workplaceInput","passwordInput","confirmPasswordInput","register","validateForm","isFormValid","user","data","role","toUpperCase","parseInt","fetch","method","headers","body","JSON","stringify","then","r","status","toast","sucess","window","location","href","setError","inputContainers","querySelectorAll","result","forEach","container","classList","contains","trim","length","setSuccess","isEmailValid","element","errorMessage","parent","parentElement","remove","add","paragraph","textContent","re","test","isWeb","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./../../../css/register.css\"\n\nclass Register extends React.Component {\n    form;\n    fullNameInput;\n    emailInput;\n    uinInput;\n    workplaceInput;\n    passwordInput;\n    confirmPasswordInput;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            fullName: \"\", email: \"\", uin: \"\", workplace: \"\", password: \"\", confirmPassword: \"\",\n        };\n        this.getFullName = this.getFullName.bind(this);\n        this.getEmail = this.getEmail.bind(this);\n        this.getWorkplace = this.getWorkplace.bind(this);\n        this.getUIN = this.getUIN.bind(this);\n        this.getPassword = this.getPassword.bind(this);\n        this.getConfirmPassword = this.getConfirmPassword.bind(this);\n    }\n\n    getFullName = (event) => {\n        this.setState({\n            fullName: event.target.value\n        })\n    };\n    getEmail = (event) => {\n        this.setState({\n            email: event.target.value\n        })\n    };\n    getWorkplace = (event) => {\n        this.setState({\n            workplace: event.target.value\n        })\n    };\n    getUIN = (event) => {\n        this.setState({\n            uin: event.target.value\n        })\n    };\n    getPassword = (event) => {\n        this.setState({\n            password: event.target.value\n        })\n    };\n    getConfirmPassword = (event) => {\n        this.setState({\n            confirmPassword: event.target.value\n        })\n    };\n\n    platform = navigator.userAgentData.platform;\n\n    componentDidMount() {\n        this.form = document.querySelector('#create-account-form');\n        this.fullNameInput = document.querySelector('#username');\n        this.emailInput = document.querySelector('#email');\n        this.uinInput = document.querySelector('#uin');\n        this.workplaceInput = document.querySelector('#workplace');\n        this.passwordInput = document.querySelector('#password');\n        this.confirmPasswordInput = document.querySelector('#confirm-password');\n    }\n\n    register() {\n        this.validateForm();\n        if (this.isFormValid() === true) {\n            let user = 'doctor';\n            if (this.platform === \"Android\")\n                user = 'patient';\n            const data = {\n                fullName: this.state.fullName,\n                role: user.toUpperCase(),\n                uin: parseInt(this.state.uin),\n                email: this.state.email,\n                workplace: this.state.workplace,\n                password: this.state.password,\n            }\n            fetch(\"http://localhost:8081/users/\" + user, {\n                method: 'POST', headers: {\n                    'Content-Type': 'application/json'\n                }, body: JSON.stringify(data),\n            }).then(r => {\n                if (r.status === 200) {\n                    toast.sucess()\n                    window.location.href = (\"/login\");\n                } else if (r.status === 302) {\n                    this.setError(this.emailInput, \"This email is already taken.\");\n                } else {\n                    this.setError(this.uinInput, \"Your UIN is incorrect.\");\n                }\n            });\n\n        }\n    }\n\n    isFormValid() {\n        const inputContainers = this.form.querySelectorAll('.input-group');\n        let result = true;\n        inputContainers.forEach((container) => {\n            if (container.classList.contains('error')) {\n                result = false;\n            }\n        });\n        return result;\n    }\n\n    validateForm() {\n        //USERNAME\n        if (this.state.fullName.trim() === '') {\n            this.setError(this.fullNameInput, 'Name can not be empty');\n        } else if (this.state.fullName.trim().length < 6) {\n            this.setError(this.fullNameInput, 'Name must be at least 6 characters');\n        } else {\n            this.setSuccess(this.fullNameInput);\n        }\n        //EMAIL\n        if (this.state.email.trim() === '') {\n            this.setError(this.emailInput, 'Provide email address');\n        } else if (this.state.email.trim() === 'admin@gmail.com')\n            this.setError(this.emailInput, 'This email is already taken!')\n        else if (this.isEmailValid(this.state.email.trim())) {\n            this.setSuccess(this.emailInput);\n        } else {\n            this.setError(this.emailInput, 'Provide valid email address');\n        }\n        if (this.platform !== \"Android\") {\n            //UIN\n            if (this.state.uin.trim() === '') {\n                this.setError(this.uinInput, 'UIN can not be empty');\n            } else if (this.state.uin.trim().length < 10 || this.state.uin.trim().length > 10) {\n                this.setError(this.uinInput, 'UIN must be 10-digit number');\n            } else {\n                this.setSuccess(this.uinInput);\n            }\n            //WORKPLACE\n            if (this.state.workplace.trim() === '') {\n                this.setError(this.workplaceInput, 'Workspace can not be empty');\n            } else if (this.state.workplace.trim().length < 6) {\n                this.setError(this.workplaceInput, 'Workspace must be at least 6 characters');\n            } else {\n                this.setSuccess(this.workplaceInput);\n            }\n        }\n        //PASSWORD\n        if (this.state.password.trim() === '') {\n            this.setError(this.passwordInput, 'Password can not be empty');\n        } else if (this.state.password.trim().length < 6 || this.state.password.trim().length > 16) {\n            this.setError(this.passwordInput, 'Password must be 6-16 characters');\n        } else {\n            this.setSuccess(this.passwordInput);\n        }\n        //CONFIRM PASSWORD\n        if (this.state.confirmPassword.trim() === '') {\n            this.setError(this.confirmPasswordInput, 'Password can not be empty');\n        } else if (this.state.confirmPassword !== this.state.password) {\n            this.setError(this.confirmPasswordInput, 'Password does not match');\n        } else {\n            this.setSuccess(this.confirmPasswordInput);\n        }\n    }\n\n    setError(element, errorMessage) {\n        const parent = element.parentElement;\n        if (parent.classList.contains('success')) {\n            parent.classList.remove('success');\n        }\n        parent.classList.add('error');\n        const paragraph = parent.querySelector('p');\n        paragraph.textContent = errorMessage;\n    }\n\n    setSuccess(element) {\n        const parent = element.parentElement;\n        if (parent.classList.contains('error')) {\n            parent.classList.remove('error');\n        }\n        parent.classList.add('success');\n    }\n\n    isEmailValid(email) {\n        const re = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\n\n        return re.test(email);\n    }\n\n\n    isWeb() {\n        if (this.platform === \"Linux\") return (<>\n            <div className=\"input-group\">\n                <label htmlFor=\"uin\">UIN</label>\n                <input type=\"number\" value={this.state.uin} onChange={event => {\n                    this.getUIN(event)\n                }} id=\"uin\" placeholder=\"UIN:\" name=\"uin\" />\n                <p>Error Message</p>\n            </div>\n\n            <div className=\"input-group\">\n                <label htmlFor=\"workplace\">Workplace</label>\n                <input type=\"text\" value={this.state.workplace} onChange={event => {\n                    this.getWorkplace(event)\n                }} id=\"workplace\" placeholder=\"Workplace:\" name=\"workplace\" />\n                <p>Error Message</p>\n            </div>\n        </>)\n        else\n            return null;\n    }\n\n    render() {\n        return (\n            <div id=\"register\">\n                <form id=\"create-account-form\" className=\"content\">\n                    <div className=\"title\">\n                        <h2>Create Account</h2>\n                    </div>\n\n                    <div className=\"input-group\">\n                        <label htmlFor=\"username\">Full Name</label>\n                        <input type=\"text\" value={this.state.fullName} onChange={event => {\n                            this.getFullName(event)\n                        }} id=\"username\" placeholder=\"Full name:\" name=\"username\" />\n                        <p>Error Message</p>\n                    </div>\n\n                    <div className=\"input-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" value={this.state.email} onChange={event => {\n                            this.getEmail(event)\n                        }} id=\"email\" placeholder=\"Email:\" name=\"email\" />\n                        <p>Error Message</p>\n                    </div>\n                    {this.isWeb()}\n                    <div className=\"input-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" value={this.state.password} onChange={event => {\n                            this.getPassword(event)\n                        }} id=\"password\" placeholder=\"Password:\" name=\"password\" />\n                        <p>Error Message</p>\n                    </div>\n\n                    <div className=\"input-group\">\n                        <label htmlFor=\"confirm-password\">Confirm Password</label>\n                        <input type=\"password\" value={this.state.confirmPassword} onChange={event => {\n                            this.getConfirmPassword(event)\n                        }} id=\"confirm-password\" placeholder=\"Password:\" name=\"confirmpassword\" />\n                        <p>Error Message</p>\n                    </div>\n\n                    <button type=\"button\" className=\"btn\" onClick={() => this.register()}>Submit</button>\n\n                    <p className=\"p\">Already registered? <a href=\"/login\">Sign In!</a></p>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}