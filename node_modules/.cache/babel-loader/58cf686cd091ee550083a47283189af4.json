{"ast":null,"code":"var _jsxFileName = \"/home/vpaligorov/Desktop/PharmacyVendingMachineUI/pvm_ui/src/elements/SharedElements/login&register/login.js\";\nimport React from \"react\";\nimport \"./../../../css/login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.getPassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    this.getEmail = this.getEmail.bind(this);\n    this.getPassword = this.getPassword.bind(this);\n  }\n\n  componentDidMount() {\n    const params = new URLSearchParams(window.location.href);\n    const ip = params.get('ip');\n    c;\n    sessionStorage.clear();\n    this.form = document.querySelector('#create-account-form');\n    this.emailInput = document.querySelector('#email');\n    this.passwordInput = document.querySelector('#password');\n  }\n\n  login() {\n    this.validateForm();\n\n    if (this.isFormValid() === true) {\n      if (this.state.email === \"admin@gmail.com\" && this.state.password === \"admin123\") {\n        window.sessionStorage.setItem('email', this.state.email);\n        window.sessionStorage.setItem('password', this.state.password);\n        window.location.href = \"/showPrescriptions\";\n      }\n\n      let user = 'doctor';\n      if (navigator.userAgentData.platform === \"Android\") user = 'patient';\n      let headers = new Headers();\n      headers.set('Authorization', 'Basic ' + btoa(this.state.email + \":\" + this.state.password));\n      headers.set('Content-Type', 'application/json');\n      fetch(\"http://localhost:8081/users/\" + user, {\n        method: 'GET',\n        headers: headers\n      }).then(r => {\n        if (r.status === 200) {\n          // myStorage = window.sessionStorage\n          window.sessionStorage.setItem('email', this.state.email);\n          window.sessionStorage.setItem('password', this.state.password);\n          if (navigator.userAgentData.platform === \"Android\") window.location.href = \"/showPrescriptions\";else window.location.href = \"/createPrescription\";\n        } else {\n          this.setError(this.emailInput, \"Email or password is incorrect.\");\n          this.setError(this.passwordInput, \"Email or password is incorrect.\");\n        }\n      });\n    }\n  }\n\n  validateForm() {\n    if (this.state.email.trim() === '') {\n      this.setError(this.emailInput, 'Provide email address');\n    } else if (this.isEmailValid(this.state.email)) {\n      this.setSuccess(this.emailInput);\n    } else {\n      this.setError(this.emailInput, 'Provide valid email address');\n    }\n\n    if (this.state.password.trim() === '') {\n      this.setError(this.passwordInput, 'Password can not be empty');\n    } else if (this.state.password.trim().length < 6 || this.state.password.trim().length > 16) {\n      this.setError(this.passwordInput, 'Password must be 6-16 characters');\n    } else {\n      this.setSuccess(this.passwordInput);\n    }\n  }\n\n  isFormValid() {\n    const inputContainers = this.form.querySelectorAll('.input-group');\n    let result = true;\n    inputContainers.forEach(container => {\n      if (container.classList.contains('error')) {\n        result = false;\n      }\n    });\n    return result;\n  }\n\n  setError(element, errorMessage) {\n    const parent = element.parentElement;\n\n    if (parent.classList.contains('success')) {\n      parent.classList.remove('success');\n    }\n\n    parent.classList.add('error');\n    const paragraph = parent.querySelector('p');\n    paragraph.textContent = errorMessage;\n  }\n\n  setSuccess(element) {\n    const parent = element.parentElement;\n\n    if (parent.classList.contains('error')) {\n      parent.classList.remove('error');\n    }\n\n    parent.classList.add('success');\n  }\n\n  isEmailValid(email) {\n    const re = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\n    return re.test(email);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"create-account-form\",\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: this.state.email,\n            onChange: event => {\n              this.getEmail(event);\n            },\n            id: \"email\",\n            placeholder: \"Email:\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Error Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: this.state.passwordInput,\n            onChange: event => {\n              this.getPassword(event);\n            },\n            id: \"password\",\n            placeholder: \"Password:\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Error Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn\",\n          onClick: () => this.login(),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Not registered yet? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/register\",\n            children: \"Sign Up!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/vpaligorov/Desktop/PharmacyVendingMachineUI/pvm_ui/src/elements/SharedElements/login&register/login.js"],"names":["React","Login","Component","constructor","props","getEmail","event","setState","email","target","value","getPassword","password","state","bind","componentDidMount","params","URLSearchParams","window","location","href","ip","get","c","sessionStorage","clear","form","document","querySelector","emailInput","passwordInput","login","validateForm","isFormValid","setItem","user","navigator","userAgentData","platform","headers","Headers","set","btoa","fetch","method","then","r","status","setError","trim","isEmailValid","setSuccess","length","inputContainers","querySelectorAll","result","forEach","container","classList","contains","element","errorMessage","parent","parentElement","remove","add","paragraph","textContent","re","test","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./../../../css/login.css\";\n\nclass Login extends React.Component {\n    form;\n    emailInput;\n    passwordInput;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\", password: \"\",\n        };\n        this.getEmail = this.getEmail.bind(this);\n        this.getPassword = this.getPassword.bind(this);\n    }\n\n    componentDidMount() {\n        const params = new URLSearchParams(window.location.href)\n        const ip = params.get('ip')\n        c\n        sessionStorage.clear()\n        this.form = document.querySelector('#create-account-form');\n        this.emailInput = document.querySelector('#email');\n        this.passwordInput = document.querySelector('#password');\n    }\n\n\n    getEmail = (event) => {\n        this.setState({\n            email: event.target.value\n        })\n    };\n\n    getPassword = (event) => {\n        this.setState({\n            password: event.target.value\n        })\n    };\n\n    login() {\n        this.validateForm();\n        if (this.isFormValid() === true) {\n            if (this.state.email === \"admin@gmail.com\" && this.state.password === \"admin123\") {\n                window.sessionStorage.setItem('email', this.state.email);\n                window.sessionStorage.setItem('password', this.state.password);\n                window.location.href = (\"/showPrescriptions\");\n            }\n            let user = 'doctor';\n            if (navigator.userAgentData.platform === \"Android\") user = 'patient';\n            let headers = new Headers();\n            headers.set('Authorization', 'Basic ' + btoa(this.state.email + \":\" + this.state.password));\n            headers.set('Content-Type', 'application/json');\n            fetch(\"http://localhost:8081/users/\" + user, {\n                method: 'GET', headers: headers\n            }).then(r => {\n                if (r.status === 200) {\n                    // myStorage = window.sessionStorage\n                    window.sessionStorage.setItem('email', this.state.email);\n                    window.sessionStorage.setItem('password', this.state.password);\n                    if (navigator.userAgentData.platform === \"Android\") window.location.href = (\"/showPrescriptions\"); else window.location.href = (\"/createPrescription\");\n                } else {\n                    this.setError(this.emailInput, \"Email or password is incorrect.\");\n                    this.setError(this.passwordInput, \"Email or password is incorrect.\");\n                }\n            });\n        }\n    }\n\n\n    validateForm() {\n        if (this.state.email.trim() === '') {\n            this.setError(this.emailInput, 'Provide email address');\n        } else if (this.isEmailValid(this.state.email)) {\n            this.setSuccess(this.emailInput);\n        } else {\n            this.setError(this.emailInput, 'Provide valid email address');\n        }\n\n        if (this.state.password.trim() === '') {\n            this.setError(this.passwordInput, 'Password can not be empty');\n        } else if (this.state.password.trim().length < 6 || this.state.password.trim().length > 16) {\n            this.setError(this.passwordInput, 'Password must be 6-16 characters');\n        } else {\n            this.setSuccess(this.passwordInput);\n        }\n    }\n\n\n    isFormValid() {\n        const inputContainers = this.form.querySelectorAll('.input-group');\n        let result = true;\n        inputContainers.forEach((container) => {\n            if (container.classList.contains('error')) {\n                result = false;\n            }\n        });\n        return result;\n    }\n\n    setError(element, errorMessage) {\n        const parent = element.parentElement;\n        if (parent.classList.contains('success')) {\n            parent.classList.remove('success');\n        }\n        parent.classList.add('error');\n        const paragraph = parent.querySelector('p');\n        paragraph.textContent = errorMessage;\n    }\n\n    setSuccess(element) {\n        const parent = element.parentElement;\n        if (parent.classList.contains('error')) {\n            parent.classList.remove('error');\n        }\n        parent.classList.add('success');\n    }\n\n    isEmailValid(email) {\n        const re = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\n\n        return re.test(email);\n    }\n\n\n    render() {\n        return (\n            <div id=\"login\">\n                <form id=\"create-account-form\" className=\"content\">\n                    <div className=\"title\">\n                        <h2>Sign In</h2>\n                    </div>\n\n                    <div className=\"input-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" value={this.state.email} onChange={event => {\n                            this.getEmail(event)\n                        }} id=\"email\"\n                            placeholder=\"Email:\" name=\"email\" />\n                        <p>Error Message</p>\n                    </div>\n\n                    <div className=\"input-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" value={this.state.passwordInput} onChange={event => {\n                            this.getPassword(event)\n                        }} id=\"password\" placeholder=\"Password:\"\n                            name=\"password\" />\n                        <p>Error Message</p>\n                    </div>\n\n                    <button type=\"button\" className=\"btn\" onClick={() => this.login()}>Submit</button>\n\n                    <p>Not registered yet? <a href=\"/register\">Sign Up!</a></p>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}