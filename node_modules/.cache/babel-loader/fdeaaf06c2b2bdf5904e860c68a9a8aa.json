{"ast":null,"code":"var _jsxFileName = \"/home/vpaligorov/Desktop/PharmacyVendingMachineUI/pvm_ui/src/elements/SharedElements/reportABug/reportABug.js\";\nimport React from \"react\";\nimport '../../../css/reportABug.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ReportABug extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getBugTitle = event => {\n      this.setState({\n        title: event.target.value\n      });\n    };\n\n    this.getBugBody = event => {\n      this.setState({\n        body: event.target.value\n      });\n    };\n\n    this.state = {\n      title: \"\",\n      body: \"\"\n    };\n    this.getBugTitle = this.getBugTitle.bind(this);\n    this.getBugBody = this.getBugBody.bind(this);\n  }\n\n  componentDidMount() {\n    this.form = document.querySelector('#create-account-form');\n    this.bugTitleInput = document.querySelector('#title');\n    this.bugBodyInput = document.querySelector('#bug');\n  }\n\n  reportABug() {\n    this.validateForm();\n\n    if (this.isFormValid() === true) {\n      const data = {\n        description: bugBodyInput.value,\n        title: bugTitleInput.value\n      };\n      let headers = new Headers();\n      headers.set('Authorization', 'Basic ' + btoa(sessionStorage.getItem('email') + \":\" + sessionStorage.getItem('password')));\n      headers.set('Content-Type', 'application/json');\n      fetch(\"http://localhost:8081/bugs\", {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify(data)\n      }).then(r => {\n        if (r.status !== 200 && r.status !== 201) {\n          window.alert(\"Something unexpected happened! Try again!\");\n        }\n      });\n    }\n  }\n\n  validateForm() {\n    if (this.state.title.trim() === '') {\n      this.setError(this.bugTitleInput, 'Bug title can not be empty');\n    } else if (this.state.title.trim().length < 6) {\n      this.setError(this.bugTitleInput, 'Bug title must be at least 6 characters');\n    } else {\n      this.setSuccess(this.bugTitleInput);\n    } //BUG BODY\n\n\n    if (this.state.body.trim() === '') {\n      this.setError(this.bugBodyInput, 'Bug body can not be empty');\n    } else if (this.state.body.trim().length < 6) {\n      this.setError(this.bugBodyInput, 'Bug body must be at least 6 characters');\n    } else {\n      this.setSuccess(this.bugBodyInput);\n    }\n  }\n\n  isFormValid() {\n    const inputContainers = this.form.querySelectorAll('.input-group');\n    let result = true;\n    inputContainers.forEach(container => {\n      if (container.classList.contains('error')) {\n        result = false;\n      }\n    });\n    return result;\n  }\n\n  setError(element, errorMessage) {\n    const parent = element.parentElement;\n\n    if (parent.classList.contains('success')) {\n      parent.classList.remove('success');\n    }\n\n    parent.classList.add('error');\n    const paragraph = parent.querySelector('p');\n    paragraph.textContent = errorMessage;\n  }\n\n  setSuccess(element) {\n    const parent = element.parentElement;\n\n    if (parent.classList.contains('error')) {\n      parent.classList.remove('error');\n    }\n\n    parent.classList.add('success');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"create-account-form\",\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Report a bug\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Bug title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.title,\n          onChange: event => {\n            this.getBugTitle(event);\n          },\n          id: \"title\",\n          placeholder: \"Bug title:\",\n          name: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Error Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bug\",\n          children: \"Bug Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"bug\",\n          value: this.state.title,\n          onChange: event => {\n            this.getBugBody(event);\n          },\n          placeholder: \"Bug description:\",\n          name: \"bug\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Error Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: () => this.reportABug(),\n        children: \"Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ReportABug;","map":{"version":3,"sources":["/home/vpaligorov/Desktop/PharmacyVendingMachineUI/pvm_ui/src/elements/SharedElements/reportABug/reportABug.js"],"names":["React","ReportABug","Component","constructor","props","getBugTitle","event","setState","title","target","value","getBugBody","body","state","bind","componentDidMount","form","document","querySelector","bugTitleInput","bugBodyInput","reportABug","validateForm","isFormValid","data","description","headers","Headers","set","btoa","sessionStorage","getItem","fetch","method","JSON","stringify","then","r","status","window","alert","trim","setError","length","setSuccess","inputContainers","querySelectorAll","result","forEach","container","classList","contains","element","errorMessage","parent","parentElement","remove","add","paragraph","textContent","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport '../../../css/reportABug.css'\n\nclass ReportABug extends React.Component {\n    form;\n    bugTitleInput;\n    bugBodyInput;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: \"\", body: \"\"\n        };\n        this.getBugTitle = this.getBugTitle.bind(this);\n        this.getBugBody = this.getBugBody.bind(this);\n    }\n\n    componentDidMount() {\n        this.form = document.querySelector('#create-account-form');\n        this.bugTitleInput = document.querySelector('#title');\n        this.bugBodyInput = document.querySelector('#bug');\n    }\n\n\n    reportABug() {\n    this.validateForm();\n    if (this.isFormValid() === true) {\n        const data = {\n            description: bugBodyInput.value,\n            title: bugTitleInput.value\n        }\n        let headers = new Headers();\n        headers.set('Authorization', 'Basic ' + btoa(sessionStorage.getItem('email') + \":\" + sessionStorage.getItem('password')));\n        headers.set('Content-Type', 'application/json');\n        fetch(\"http://localhost:8081/bugs\", {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(data),\n        }).then(r => {\n            if (r.status !== 200 && r.status !== 201) {\n                window.alert(\"Something unexpected happened! Try again!\");\n            }\n        });\n    }\n}\n    \n    getBugTitle = (event) => {\n        this.setState({\n            title: event.target.value\n        })\n    };\n\n    getBugBody = (event) => {\n        this.setState({\n            body: event.target.value\n        })\n    };\n\n    validateForm() {\n        if (this.state.title.trim() === '') {\n            this.setError(this.bugTitleInput, 'Bug title can not be empty');\n        } else if (this.state.title.trim().length < 6) {\n            this.setError(this.bugTitleInput, 'Bug title must be at least 6 characters');\n        } else {\n            this.setSuccess(this.bugTitleInput);\n        }\n        //BUG BODY\n        if (this.state.body.trim() === '') {\n            this.setError(this.bugBodyInput, 'Bug body can not be empty');\n        } else if (this.state.body.trim().length < 6) {\n            this.setError(this.bugBodyInput, 'Bug body must be at least 6 characters');\n        } else {\n            this.setSuccess(this.bugBodyInput);\n        }\n    }\n\n\n    isFormValid() {\n        const inputContainers = this.form.querySelectorAll('.input-group');\n        let result = true;\n        inputContainers.forEach((container) => {\n            if (container.classList.contains('error')) {\n                result = false;\n            }\n        });\n        return result;\n    }\n\n    setError(element, errorMessage) {\n        const parent = element.parentElement;\n        if (parent.classList.contains('success')) {\n            parent.classList.remove('success');\n        }\n        parent.classList.add('error');\n        const paragraph = parent.querySelector('p');\n        paragraph.textContent = errorMessage;\n    }\n\n    setSuccess(element) {\n        const parent = element.parentElement;\n        if (parent.classList.contains('error')) {\n            parent.classList.remove('error');\n        }\n        parent.classList.add('success');\n    }\n\n\n    render() {\n        return (\n            <form id=\"create-account-form\" className=\"content\">\n\n                <div className=\"title\">\n                    <h2>Report a bug</h2>\n                </div>\n\n                <div className=\"input-group\">\n                    <label htmlFor=\"title\">Bug title</label>\n                    <input type=\"text\" value={this.state.title} onChange={event => {\n                    this.getBugTitle(event)\n                }} id=\"title\" placeholder=\"Bug title:\" name=\"title\"/>\n                    <p>Error Message</p>\n                </div>\n\n                <div className=\"input-group\">\n                    <label htmlFor=\"bug\">Bug Description</label>\n                    <textarea id=\"bug\" value={this.state.title} onChange={event => {\n                    this.getBugBody(event)\n                }} placeholder=\"Bug description:\" name=\"bug\"/>\n                    <p>Error Message</p>\n                </div>\n\n                <button type=\"button\" className=\"btn\" onClick={()=>this.reportABug()}>Report</button>\n            </form>\n        )\n    }\n}\n\nexport default ReportABug"]},"metadata":{},"sourceType":"module"}